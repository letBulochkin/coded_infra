---
- name: Setup Service Host
  hosts: service_host
  tasks:
    - name: Create PS1 shell script
      copy:
        dest: "/etc/profile.d/ps1.sh"
        content: |
          PS1="\[\e[34m\][\A]:\[\e[30;43m\][\u@\h \W]\[\e[0m\]\[\e[32m\]$\[\e[0m\] "
    - name: Install BIND9  # maybe move to a separate role
      yum:
        name:
          - bind
          - bind-utils
        state: present
      notify:
        start_bind
    - block:
      - name: Copy named.conf  # maybe try to use templates, but for now I don't think that's a good idea
        copy:
          src: files/bind/named.conf
          dest: /etc/named.conf
          mode: '0644'
      - name:
        file:
          state: directory
          path: /var/named/zones
          mode: '0755'
      - name: Copy primary zone file
        copy:
          src: files/bind/soup-int.msk.ru.zone
          dest: /var/named/zones/soup-int.msk.ru.zone
          mode: '0644'
          backup: yes
      - name: Copy reverse zone file
        copy:
          src: files/bind/35.172.in-addr.arpa.zone
          dest: /var/named/zones/35.172.in-addr.arpa.zone
          mode: '0644'
          backup: yes
      - name: Verify named.conf
        command: named-checkconf
      - name: Verify primary zone file
        command: named-checkzone soup-int.msk.ru /var/named/zones/soup-int.msk.ru.zone
      - name: Verify reverse zone file
        command: named-checkzone 35.172.in-addr.arpa.zone /var/named/zones/35.172.in-addr.arpa.zone
      notify:
        restart_bind
  handlers:
    - name: start_bind
      systemd:
        name: named
        enabled: yes
        state: started
    - name: restart_bind
      systemd:
        name: named
        state: restarted

- name: Setup backend hosts
  hosts: backends
  vars:
    nginx_launch_user: root  # TODO: use non-root maybe?
    worker_processes: auto
    worker_connections: 1024
    soup_primary_eip: "185.12.30.91"  # TODO: get data from Terraform output
    proxy_web_address: "letbulochkin.github.io"
  tasks:
    - name: Create PS1 shell script
      copy:
        dest: "/etc/profile.d/ps1.sh"
        content: |
          PS1="\[\e[34m\][\A]:\[\e[30;42m\][\u@\h \W]\[\e[0m\]\[\e[32m\]$\[\e[0m\] "
    - name: Install NGINX
      yum:
        name: nginx
        state: present
      notify:
        start_nginx
    - block:
      - name: Copy NGINX config
        template:
          src: files/nginx/templates/nginx.conf
          dest: /etc/nginx/nginx.conf
      - name: Verify NGINX config
        command: nginx -t -c /etc/nginx/nginx.conf
      notify:
        restart_nginx
  handlers:
    - name: start_nginx
      systemd:
        name: nginx
        enabled: yes
        state: started
    - name: restart_nginx
      systemd:
        name: nginx
        state: restarted

- name: Setup Load Balancers
  hosts: load_balancers
  tasks:
    - name: Create PS1 shell script
      copy:
        dest: /etc/profile.d/ps1.sh
        content: |
          PS1="\[\e[34m\][\A]:\[\e[30;42m\][\u@\h \W]\[\e[0m\]\[\e[32m\]$\[\e[0m\] "
    - name: Install HAProxy
      yum:
        name: haproxy
        state: present
      notify:
        start_haproxy
    - block:
      - name: Setup HAProxy  # This whole section is done in a great hurry. Needs tuning
        copy:
          src: files/haproxy/haproxy.cfg
          dest: /etc/haproxy/haproxy.cfg
          mode: '0644'
      - name: Verify HAProxy config
        command: haproxy -c -f /etc/haproxy/haproxy.cfg
      notify:
        restart_haproxy
  handlers:
    - name: start_haproxy
      systemd:
        name: haproxy
        enabled: yes
        state: started
    - name: restart_haproxy
      systemd:
        name: haproxy
        state: restarted
